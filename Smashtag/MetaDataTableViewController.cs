// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using Foundation;
using LinqToTwitter;
using System.Linq;
using UIKit;

namespace Smashtag
{
	public partial class MetaDataTableViewController : UITableViewController
	{
		Dictionary<string, List<MetaDataElement>> _entities = new Dictionary<string, List<MetaDataElement>>();

		struct StoryboardId
		{
			public const string BasicCellIdentifier = "Basic Info Cell";
			public const string ImageCellIdentifier = "Tweet Image Cell";
		}
		public MetaDataTableViewController (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad()
		{
			base.ViewDidLoad();

			//TableView.EstimatedRowHeight = TableView.RowHeight;
			TableView.RowHeight = UITableView.AutomaticDimension;
		}

		private Status _tweet;
		public Status Tweet
		{
			get { return _tweet; }
			set { _tweet = value; SetupUI();  }
		}

		void SetupUI()
		{
			Title = Tweet.User.ScreenNameResponse;
			_entities.Clear();

			var images = Tweet.Entities.MediaEntities.SelectMany(media => media.Sizes.Select(size => new MetaDataElement { Value = media.MediaUrl, AspectRatio= (decimal)size.Height/ size.Width, Kind = MetaDataKind.Image }));

			_entities.Add(_sections[0],images.ToList());

			_entities.Add(_sections[1],
			              Tweet.Entities.UserMentionEntities.Select(x => new MetaDataElement { 
								Value = x.Name,
								Kind = MetaDataKind.Mention
						  }).ToList());
			_entities.Add(_sections[2],
						  Tweet.Entities.HashTagEntities.Select(x => new MetaDataElement
						  {
							  Value = x.Tag,
							  Kind = MetaDataKind.Mention
						  }).ToList());
			_entities.Add(_sections[3],
			              Tweet.Entities.UrlEntities.Select(x => new MetaDataElement
						  {
							  Value = x.Url,
							  Kind = MetaDataKind.Mention
						  }).ToList());
			TableView.ReloadData();
		}


		#region Table

		Dictionary<int, string> _sections = new Dictionary<int, string>
		{ 
			{0, "Images"},
			{1, "Mentions"},
			{2, "Hashtags"},
			{3, "Links"},
		};

		public override string TitleForHeader(UITableView tableView, nint section)
		{
			return _entities[ _sections[(int)section]].Count > 0 ? _sections[(int)section] : String.Empty;
		}

		public override nint NumberOfSections(UITableView tableView)
		{
			return _entities.Count;
		}

		public override nint RowsInSection(UITableView tableView, nint section)
		{
			
			return _entities[_sections[(int)section]].Count;
		}

		public override nfloat GetHeightForRow(UITableView tableView, NSIndexPath indexPath)
		{

			if (indexPath.Section == 0)
			{
				var width = UIScreen.MainScreen.Bounds.Width;
				//System.Diagnostics.Debug.WriteLine($"Width: {width}\tAspect: {_entities[_sections[0]][indexPath.Row].AspectRatio}");
				return ((nfloat)_entities[_sections[0]][indexPath.Row].AspectRatio) * width;
			}
			return TableView.RowHeight;
		}

		public override nfloat EstimatedHeight(UITableView tableView, NSIndexPath indexPath)
		{
			if (indexPath.Section == 0)
			{
				var width = UIScreen.MainScreen.Bounds.Width;
				System.Diagnostics.Debug.WriteLine($"Width: {width}\tAspect: {_entities[_sections[0]][indexPath.Row].AspectRatio}");
				return new nfloat(30);// ((nfloat)_entities[_sections[0]][indexPath.Row].AspectRatio) * width;
			}
			return TableView.RowHeight;
			//return base.EstimatedHeight(tableView, indexPath);
		}

		public override UITableViewCell GetCell(UITableView tableView, NSIndexPath indexPath)
		{
			var value = _entities[_sections[indexPath.Section]][indexPath.Row];
			System.Diagnostics.Debug.WriteLineIf(value.Kind == MetaDataKind.Image, $"{value.Value} {value.AspectRatio}");
			if (value.Kind != MetaDataKind.Image)
			{
				var cell = TableView.DequeueReusableCell(StoryboardId.BasicCellIdentifier, indexPath);

				cell.TextLabel.Text = value.Value;

				return cell;
			}
			else {
				var imageCell = TableView.DequeueReusableCell(StoryboardId.ImageCellIdentifier, indexPath) as TweetImageViewCell;

				imageCell.SetImage(value.Value);
				return imageCell;
			}
			//return null;
		}
		#endregion
	}
}
