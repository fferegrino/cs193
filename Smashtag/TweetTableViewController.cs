// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using Foundation;
using LinqToTwitter;
using System.Linq;
using UIKit;

namespace Smashtag
{
	public partial class TweetTableViewController : UITableViewController
	{
		public TweetTableViewController (IntPtr handle) : base (handle)
		{
		}

		List<List<Status>> _tweets = new List<List<Status>>();
		public List<List<Status>> Tweets
		{
			get { return _tweets; }
			set
			{
				_tweets = value;
				TableView.ReloadData();
			}
		}

		string _searchText;
		public string SearchText
		{
			get { return _searchText; }
			set
			{
				_searchText = value;
				//_tweets.RemoveAll
				SearchForTweets();
				Title = _searchText;
			}
		}

		SingleUserAuthorizer _auth;
		SingleUserAuthorizer Auth => _auth ?? (_auth = new SingleUserAuthorizer
		{
			CredentialStore = new SingleUserInMemoryCredentialStore
			{
				ConsumerKey = "zxEHIfRSyTuZMISSINGvAXPU",
				ConsumerSecret = "TdXx16u7VMISSINGkPu0MZy89Y83YLd4OKwlaZgKjztumznCT",
				AccessToken = "89851232-NLgMISSINGEacp7tEvpWg6aLPKQUOGBVTOgfD7Nr",
				AccessTokenSecret = "ryV0dKMISSINGEuJgq4Vn2XT1swzhqixYMxZnc7KMkSV"
			}
		});

		void SearchForTweets()
		{

			TwitterContext ctx = new TwitterContext(Auth);

			new System.Threading.Thread(new System.Threading.ThreadStart(() =>
			{

			var srch =
					(from search in ctx.Search
					 where search.Type == SearchType.Search &&
						   search.Query == SearchText &&
						   search.Count == 100
					 select search)
					.SingleOrDefault();
				InvokeOnMainThread(() =>
				{
					_tweets.Insert(0, srch.Statuses);
					TableView.ReloadData();
				});
			})).Start();
		}

		public override void ViewDidLoad()
		{
			base.ViewDidLoad();
			SearchText = "#stanford";
		}

		public override nint NumberOfSections(UITableView tableView)
		{
			return Tweets.Count;
		}

		public override nint RowsInSection(UITableView tableView, nint section)
		{
			return Tweets[(int)section].Count;
		}

		struct StoryboardId
		{
			public const string TweetCellIdentifier = "Tweet";
		}

		public override UITableViewCell GetCell(UITableView tableView, NSIndexPath indexPath)
		{
			var cell = TableView.DequeueReusableCell(StoryboardId.TweetCellIdentifier, indexPath);

			var tweet = Tweets[indexPath.Section][indexPath.Row];
			cell.TextLabel.Text = tweet.Text;
			cell.DetailTextLabel.Text = tweet.User.Name;

			return cell;
		}
	}
}
